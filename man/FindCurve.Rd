% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FindCurve.R
\name{FindCurve}
\alias{FindCurve}
\title{Computes a solution curve determined by a system of non-linear equations}
\usage{
FindCurve(
  modelname = NULL,
  curvetype = NULL,
  startpoint = NULL,
  stepsize = NULL,
  bounds = NULL,
  parameters = NULL,
  options = NULL,
  cflags = NULL,
  clean = FALSE,
  force = FALSE,
  debug = FALSE,
  silent = FALSE
)
}
\arguments{
\item{modelname}{(string, required)
\preformatted{}
               Basename of the file with the specification of the system of
               equations. The file should have extension '.h'. For example, if
               the system of equations is specified in "Cja.h", the name should
               be given as "Cja.h" or "Cja".}

\item{curvetype}{(string, required)
\preformatted{}
               Type of curve to compute: BP, EQ, LP or EXT}

\item{startpoint}{(row vector, required)
\preformatted{}
               The initial point from which to start the continuation of the curve}

\item{stepsize}{(double value, required)
\preformatted{}
               The target step size along the computed solution curve}

\item{bounds}{(row vector of length 2, 4 or twice the number of unknowns, required)
\preformatted{}
               The bounds to the region to which to restrict the computation
               of the curve. To only put restrictions on the parameter
               values, the vector should be of length 2 or 4 in case
               of a one or two parameter continuation, respectively.
               Otherwise, the vector should be of a length twice the
               number of unknowns in the problem.
               The format is always [min1 max1 min2 max2....]}

\item{parameters}{(row vector, optional, can be left equal to its default NULL)
\preformatted{}
               Vector of length PARAMETER_NR (set in the model program
               file), specifying the values for the model parameters to use in
               the computation. Vectors of other lengths, including an empty
               vector will be ignored.}

\item{options}{(row vector of strings, optional, can be left equal to its default NULL)
\preformatted{}
              Vector with pairs of strings, consisting of an option name and a value (for
              example c("par1", "1")) or single options (i.e. c("test")).
              Possible option names and their values are:
\preformatted{}
              \verb{"par1", "<index>"}:    Index of the first bifurcation parameter
\preformatted{}
              \verb{"par2", "<index>"}:    Index of the second bifurcation parameter
\preformatted{}
              \verb{"EXTfun", "<index>"}:  Index of the element in the ExtraOutput[]
                                           vector, for which to test for maximum and
                                           minimum values along the curve
\preformatted{}
              \verb{"EXTpar", "<index>"}:  Index of the parameter, with respect
                                           to which to test for maximum and minimum
                                           values along the curve
\preformatted{}
              \verb{"report", "<value>"}:  Interval between consecutive output of
                                           computed points to the console ( >= 1).
                                           Minimum value of 1 implies output of every
                                           point
\preformatted{}
              \verb{"negative"}:           Allow negative values in the solution point
\preformatted{}
              \verb{"noBP"}:               Do not check for branching points while
                                           computing equilibrium curves
\preformatted{}
              \verb{"noEXT"}:              Do not check for extremum points while
                                           computing equilibrium curves
\preformatted{}
              \verb{"noLP"}:               Do not check for limit points while
                                           computing equilibrium curves
\preformatted{}
              \verb{"silent"}:             Do not report any error or diagnostic
                                           messages to the console
\preformatted{}
              \verb{"single"}:             Only compute the first point of the
                                           solution curve, do not continue the curve
\preformatted{}
              \verb{"test"}:               Perform only a single integration over
                                           reporting the values of the unknowns and
                                           the value of the resulting systems of
                                           non-liear equations}

\item{cflags}{(string, optional, can be left equal to its default value NULL)
\preformatted{}
              String containing possible arguments to pass to the compiler
              when compiling the C code. This string can be used for conditional
              compilation purposes (i.e. cflags = "-D<macro name>=1") to switch
              between different versions of equations to solve for. If cflags = NULL,
              the compile script looks whether an environment variable CFLAGS is defined
              and uses its value instead.}

\item{clean}{(Boolean, optional argument)
\preformatted{}
              Specify clean = TRUE as argument to remove all the result files
              of previous computations before proceeding}

\item{force}{(Boolean, optional argument)
\preformatted{}
              Specify force = TRUE as argument to force a rebuilding of the model
              before the computation}

\item{debug}{(Boolean, optional argument)
\preformatted{}
              Specify debug = TRUE as argument to compile the model in verbose
              mode and with debugging flag set}

\item{silent}{(Boolean, optional argument)
\preformatted{}
              Specify silent = TRUE as argument to suppress reporting of compilation
              commands and results on the console}
}
\value{
The output is a list containing the following elements:
\preformatted{}
  \verb{curvepoints}: Matrix with output for all computed points along the curve
\preformatted{}
  \verb{curvedesc}:   Column vector with strings, summarizing the numerical details
               of the computed curve (i.e., initial point, parameter values,
               numerical settings used)
\preformatted{}
  \verb{bifpoints}:   Matrix with the located bifurcation points along the curve
\preformatted{}
  \verb{biftypes}:    Column vector of strings, containing a description of the
               type of bifurcation for each of the located bifurcation points
}
\description{
\code{FindCurve} computes a solution curve that is determined by a system
of non-linear equations. When computing solution curves as a function of one
parameter, \code{FindCurve} can detect transcritical bifurcation points
(branching points, BP), limit points (LP) in the solution curve and
points where an arbitrary function of the solution reaches an extreme value (EXT).
The location of these bifurcation points can subsequently be computed as a
function of second parameter.
}
\details{
output <- FindCurve(modelname = NULL, curvetype = NULL, startpoint = NULL,
                      stepsize = NULL, bounds = NULL, parameters = NULL,
                      options = NULL, cflags = NULL,
                      clean = FALSE, force = FALSE, debug = FALSE, silent = FALSE)
}
\examples{
\dontrun{
parameters <- c(0.1, 30.0, 1.0, 0.1, 0.5, 0.1, 0.015, 0.5, 3.0, 0.0, 0.0, 0.0, 0.0,
                10.0, 0.0, 0.32, 0.032, 0.5, 0.005, 0.0, 3.0, 0.0, 1.0, 0.0);
output1 <- FindCurve("CjaP", "EQ", c(0.0, 2.12019, 0.892170, 11.3152, 0.0), 0.5, c(0.0, 1.0),
                     parameters, c("par1", "10", "EXTfun", "1", "EXTpar", "10"),
                     clean = TRUE, force = TRUE);
}

}
